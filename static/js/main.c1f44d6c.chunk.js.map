{"version":3,"sources":["components/Nav.js","components/Main.js","components/About.js","components/Projects.js","components/TechStack.js","components/Footer.js","App.js","serviceWorker.js","index.js","images/profile.jpg"],"names":["Header","className","href","icon","faGithub","size","faLinkedin","faEnvelope","Main","id","class","About","src","kelly","alt","Projects","TechStack","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"2RAMe,SAASA,IACtB,OACE,yBAAKC,UAAU,OACb,6BACE,6BACE,wBAAIA,UAAU,WACZ,4BAAI,uBAAGC,KAAK,gCAA+B,kBAAC,IAAD,CAAiBC,KAAMC,IAAUC,KAAK,SACjF,4BAAI,uBAAGH,KAAK,0CAAyC,kBAAC,IAAD,CAAiBC,KAAMG,IAAYD,KAAK,SAC7F,4BAAI,uBAAGH,KAAK,kCAAiC,kBAAC,IAAD,CAAiBC,KAAMI,IAAYF,KAAK,UAEvF,4BACE,4BAAI,uBAAGH,KAAK,SAAR,SACJ,4BAAI,uBAAGA,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,aAAR,aACJ,4BAAI,uBAAGA,KAAK,eAAR,mBClBD,SAASM,IACpB,OACE,yBAAKP,UAAU,YAAYQ,GAAG,QAC5B,yBAAKC,MAAM,eACT,yBAAKA,MAAM,QACT,yCACA,kHACA,gCAAQ,uBAAGR,KAAK,kCAAR,oB,oBCNL,SAASS,IACpB,OACI,yBAAKV,UAAU,YAAYQ,GAAG,SAC5B,qCACA,6BAAK,yBAAKG,IAAKC,IAAOC,IAAI,WAC1B,qPAIA,qZAMA,smBChBK,SAASC,IACpB,OACI,yBAAKd,UAAU,YAAYQ,GAAG,YAC5B,wCACA,yBAAKR,UAAU,YACb,yBAAKA,UAAU,WACb,sCACA,kEAEF,yBAAKA,UAAU,WACb,0CACA,sDAEF,yBAAKA,UAAU,WACb,2BAAG,oCAAH,qBACA,gECfC,SAASe,IACpB,OACI,yBAAKf,UAAU,YAAYQ,GAAG,cAC5B,0CACA,yBAAKC,MAAM,gBACT,yBAAKA,MAAM,IAAX,cACA,oCACA,qCACA,sCACA,sCACA,wCACA,sCCXG,SAASO,IACpB,OACI,yBAAKhB,UAAU,WCmBRiB,MAbf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAACO,EAAD,MACA,kBAACG,EAAD,MACA,kBAACI,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,QCNcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,kBEnInBC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.c1f44d6c.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Header() {\n  return (\n    <div className='nav'>\n      <nav>\n        <div>\n          <ul className='socials'>\n            <li><a href='https://github.com/smellyung'><FontAwesomeIcon icon={faGithub} size=\"2x\"/></a></li>\n            <li><a href='https://www.linkedin.com/in/kelly-ung/'><FontAwesomeIcon icon={faLinkedin} size=\"2x\"/></a></li>\n            <li><a href='mailto: kellyung@hotmail.co.uk'><FontAwesomeIcon icon={faEnvelope} size=\"2x\"/></a></li>\n          </ul>\n          <ul>\n            <li><a href='#main'>Home</a></li>\n            <li><a href='#about'>About</a></li>\n            <li><a href='#projects'>Projects</a></li>\n            <li><a href='#tech-stack'>Tech Stack</a></li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}","import React from 'react';\n\nexport default function Main() {\n    return (\n      <div className='container' id='main'>\n        <div class='info-border'>\n          <div class='info'>\n            <h1>Kelly Ung</h1>\n            <p>I'm a London based Full Stack Web Developer enthusiastic about coding and learning.</p>\n            <button><a href='mailto: kellyung@hotmail.co.uk'>CONTACT NOW!</a></button>\n          </div>\n        </div>\n      </div>\n    );\n  }","import React from 'react';\nimport kelly from '../images/profile.jpg';\n\nexport default function About() {\n    return (\n        <div className='container' id='about'>\n          <h1>About</h1>\n          <div><img src={kelly} alt='Kelly' /></div>\n          <p>\n            Hi! My name is Kelly. I'm a web developer based in London, looking for opportunities in web development.\n            A graduate from Queen Mary University of London, with a First Class Honours Bachelor's degree in Mathematics.\n          </p>\n          <p>\n            I've had previous experience working at British Gas, helping to build new features on their new generation app. \n            This was my first commercial role post graduation and whilst there I learnt a lot about writing clean, readable code, \n            and the collobarative effort of maintaining such a huge codebase. \n            I also learnt to work with agile methodologies, most notably Scrum and Kanban.\n          </p>\n          <p>\n            More recently, I've just completed the Kodiri Coding Bootcamp. I've refined and enhanced my skills by learning to build full stack, responsive apps from scratch!\n            During the two months, I have built a solo app (Kodlfix) as well as a Team App (Fridge-App). \n            On top of this, I have attended and provided support for several Kodiri meetup events - \n            I recently won the Intermediate Challenge at the Silicon Roundabout event held at the Accelerator (part of Metropolitan University)! \n            Navigate to the following sections to find out more about the tech stack used and projects I've worked on.\n          </p>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Projects() {\n    return (\n        <div className='container' id='projects'>\n          <h1>Projects</h1>\n          <div className='projects'>\n            <div className='project'>\n              <p>Kodflix</p>\n              <p>A tv series and movie watching app</p>\n            </div>\n            <div className='project'>\n              <p>Smart Brain</p>\n              <p>A face recognition app</p>\n            </div>\n            <div className='project'>\n              <p><span>IN</span>FINITE Streetwear</p>\n              <p>A sustainable streetwear brand</p>\n            </div>\n          </div>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function TechStack() {\n    return (\n        <div className='container' id='tech-stack'>\n          <h1>Tech Stack</h1>\n          <div class='technologies'>\n            <div class=''>JavaScript</div>\n            <div>CSS</div>\n            <div>HTML</div>\n            <div>React</div>\n            <div>Ember</div>\n            <div>Node.js</div>\n            <div>Git</div>\n          </div>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <div className='footer'>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport TechStack from './components/TechStack';\nimport Footer from './components/Footer';\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Main />\n      <About />\n      <Projects />\n      <TechStack />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.a172e420.jpg\";"],"sourceRoot":""}